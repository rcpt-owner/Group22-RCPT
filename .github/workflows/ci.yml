name: CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:

  # Ensure the Docker image builds (optional if only frontend is in scope)
  docker-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build Docker image
      working-directory: Docker
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Frontend/rcpt

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        cache: npm
        cache-dependency-path: ./Frontend/rcpt/package-lock.json
    - name: Install dependencies
      run: npm install
      working-directory: ./Frontend/rcpt
    - name: Build
      run: npm run build
      working-directory: ./Frontend/rcpt
    # - name: Run tests  # for when tests are implemented
    #   run: npm test
    #   working-directory: ./Frontend/rcpt

  frontend-lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ./Frontend/rcpt/package-lock.json
    - name: Install dependencies
      run: npm install
      working-directory: ./Frontend/rcpt
    - name: Lint code
      run: npm run lint
      working-directory: ./Frontend/rcpt
    - name: Run type check
      run: npm run type-check
      working-directory: ./Frontend/rcpt