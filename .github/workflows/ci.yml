name: CI

on:
  push:
<<<<<<< Updated upstream
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

permissions:
  contents: read

jobs:

  # FRONTEND BUILD & CHECKS
  frontend:
    name: Frontend – Build / Type Check / Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: ./Frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run type-check

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

  # BACKEND TESTING
  backend:
    name: Backend – Unit & Integration Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Make Maven wrapper executable
        run: chmod +x ./mvnw

      - name: Run tests
        run: ./mvnw test
=======
    braanches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:

  # This workflow contains a single job called "build" which is for Docker Image
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      working-directory: Docker
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
>>>>>>> Stashed changes
