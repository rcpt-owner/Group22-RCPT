version: "3.9"

services:
  db:
    image: postgres:16
    container_name: rcpt_db
    environment:
      POSTGRES_DB: rcpt
      POSTGRES_USER: rcpt_user
      POSTGRES_PASSWORD: rcpt_pass
    ports:
      - "5432:5432"
    volumes:
      - rcpt_db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d   # optional: seed SQL goes here
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rcpt_user -d rcpt"]
      interval: 5s
      timeout: 3s
      retries: 12

  backend:
    build:
      context: ../Backend                      # points at Maven root (pom.xml, mvnw, src/)
      dockerfile: ../Docker/backend.Dockerfile # your multi-stage Spring Boot Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/rcpt
      SPRING_DATASOURCE_USERNAME: rcpt_user
      SPRING_DATASOURCE_PASSWORD: rcpt_pass
      SPRING_PROFILES_ACTIVE: docker
      CORS_ALLOWED_ORIGINS: http://localhost:3000
      JAVA_TOOL_OPTIONS: "-XX:+UseContainerSupport -XX:MaxRAMPercentage=75"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ../Frontend                     # this folder contains the "rcpt/" app
      dockerfile: ../Docker/frontend.Dockerfile
    environment:
      # CRA uses REACT_APP_* ; Vite uses VITE_* (we set both)
      REACT_APP_API_BASE: http://localhost:8080
      VITE_API_BASE: http://localhost:8080
      HOST: 0.0.0.0
      PORT: "3000"
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ../Frontend/rcpt:/app                  # live-reload: map your sources
      - /app/node_modules                      # keep node_modules inside the container
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3000 >/dev/null 2>&1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
      start_period: 20s

volumes:
  rcpt_db_data:
