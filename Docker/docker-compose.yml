# This stack runs:
# - Postgres (lookup/reference data)
# - MongoDB (project documents)
# - lookup-service (small API in front of Postgres)
# - api-service (Spring Boot; serves API + SPA static files)

services:
  postgres:
    container_name: rcpt-postgres
    image: postgres:16
    environment:
      # Creates a "lookups" DB with a basic user for local dev
      POSTGRES_DB: lookups
      POSTGRES_USER: rcpt
      POSTGRES_PASSWORD: rcptpw
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rcpt -d lookups"]
      interval: 10s
      timeout: 5s
      retries: 6

  mongo:
    container_name: rcpt-mongo
    image: mongo:7
    command: ["--auth"]
    environment:
     # Root admin for local dev only (do NOT use in prod)
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpw
    volumes:
      - mongodata:/data/db
      - ./mongo/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "mongosh -u root -p rootpw --authenticationDatabase admin --eval 'db.runCommand({ping:1})' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 6

  #lookup-service:
    # Small service that exposes lookup/reference data over HTTP
    # so the API doesn't need to connect to two databases directly.
    #build: ./lookup-service
    #environment:
      #DB_URL: jdbc:postgresql://postgres:5432/lookups
      #DB_USER: rcpt
      #DB_PASSWORD: rcptpw
      #SERVER_PORT: "8081"
    #depends_on:
      #postgres:
        #condition: service_healthy
    #healthcheck:
      #test: ["CMD", "curl", "-fsS", "http://localhost:8081/health"]
      #interval: 10s
      #timeout: 5s
      #retries: 5
    
  #api-service:
    # Spring Boot app that:
    # - Serves REST API (/api/â€¦)
    # - Serves the SPA static build (index.html + assets)
    # - Calls lookup-service for reference data
    #build: ./api
    #environment:
      #MONGO_URI: mongodb://rcptapp:rcptapppw@mongo:27017/rcpt?authSource=admin
      #LOOKUP_BASE_URL: http://lookup-service:8081
      #SERVER_PORT: "8080"
      #CORS_ORIGINS: http://localhost:8080
    #ports:
      #- "8080:8080"
    #depends_on:
      #mongo:
        #condition: service_healthy
      #lookup-service:
        #condition: service_healthy
    #healthcheck:
      #test: ["CMD", "curl", "-fsS", "http://localhost:8080/health"]
      #interval: 10s
      #timeout: 5s
      #retries: 5

volumes:
  pgdata:
  mongodata:
